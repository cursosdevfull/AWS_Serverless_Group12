# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: sergiohidalgocaceres
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: example05-lambda-sns-sqs-lambda
# "service" is the name of this project. This will also be added to your AWS resource names.
service: example13-authorizer-cognito

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, "dev"}

build:
  esbuild:
    bundle: true
    minify: false
    exclude:
      - "@aws-sdk/*"

functions:
  Register:
    handler: src/handlers/register/index.main
    events:
      - http:
          path: /register
          method: post   
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref AppointmentCognitoAuthorizer

resources:
  Resources:
    AppointmentCognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: cognito-userpoll
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        EmailVerificationSubject: "Verificación requerida"
        EmailVerificationMessage: "Gracias por registrarte en nuestra plataforma. Por favor verifica tu correo usando el siguiente código: {####}"
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: false
            RequireUppercase: false
            RequireNumbers: false
            RequireSymbols: false
            TemporaryPasswordValidityDays: 0

    AppointmentCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: userpool-client
        UserPoolId: !Ref AppointmentCognitoUserPool
        GenerateSecret: false
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
          - ALLOW_USER_SRP_AUTH

    AppointmentCognitoAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: authorizerCourse
        IdentitySource: method.request.header.Authorization
        RestApiId: !Ref ApiGatewayRestApi
        Type: COGNITO_USER_POOLS 
        ProviderARNs:
          - Fn::GetAtt:
              - AppointmentCognitoUserPool
              - Arn